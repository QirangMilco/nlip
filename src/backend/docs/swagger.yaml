basePath: /api/v1/nlip
definitions:
  clip.Clip:
    properties:
      clipId:
        type: string
      content:
        type: string
      contentType:
        type: string
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/clip.Creator'
      filePath:
        type: string
      id:
        type: string
      spaceId:
        type: string
      updatedAt:
        type: string
    type: object
  clip.ClipResponse:
    properties:
      clip:
        $ref: '#/definitions/clip.Clip'
    type: object
  clip.Creator:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  clip.ListClipsResponse:
    properties:
      clips:
        items:
          $ref: '#/definitions/clip.Clip'
        type: array
    type: object
  clip.UpdateClipRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  clip.UploadClipRequest:
    properties:
      content:
        type: string
      contentType:
        type: string
      creator:
        type: string
      spaceId:
        type: string
    type: object
  space.AcceptInviteRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  space.CollaboratorInfo:
    properties:
      id:
        type: string
      permission:
        type: string
      username:
        type: string
    type: object
  space.CreateSpaceRequest:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/space.CollaboratorInfo'
        type: array
      maxItems:
        minimum: 1
        type: integer
      name:
        maxLength: 50
        minLength: 2
        type: string
      retentionDays:
        minimum: 1
        type: integer
      type:
        enum:
        - public
        - private
        type: string
    required:
    - collaborators
    - maxItems
    - name
    - retentionDays
    type: object
  space.InviteCollaboratorRequest:
    properties:
      email:
        type: string
      permission:
        enum:
        - edit
        - view
        type: string
    required:
    - email
    - permission
    type: object
  space.InviteCollaboratorResponse:
    properties:
      inviteLink:
        type: string
    type: object
  space.ListCollaboratorsResponse:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/space.CollaboratorInfo'
        type: array
    type: object
  space.ListSpacesResponse:
    properties:
      spaces:
        items:
          $ref: '#/definitions/space.Space'
        type: array
    type: object
  space.RemoveCollaboratorRequest:
    properties:
      collaboratorId:
        type: string
    required:
    - collaboratorId
    type: object
  space.Space:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/space.CollaboratorInfo'
        type: array
      collaboratorsMap:
        additionalProperties:
          type: string
        type: object
      createdAt:
        type: string
      id:
        type: string
      maxItems:
        type: integer
      name:
        type: string
      ownerId:
        type: string
      retentionDays:
        type: integer
      type:
        description: public 或 private
        type: string
      updatedAt:
        type: string
    type: object
  space.SpaceResponse:
    properties:
      space:
        $ref: '#/definitions/space.Space'
    type: object
  space.SpaceStatsResponse:
    properties:
      clipsCount:
        type: integer
      ownerUsername:
        type: string
    type: object
  space.UpdateCollaboratorPermissionsRequest:
    properties:
      collaboratorId:
        type: string
      permission:
        enum:
        - edit
        - view
        type: string
    required:
    - collaboratorId
    - permission
    type: object
  space.UpdateSpaceRequest:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/space.CollaboratorInfo'
        type: array
      maxItems:
        type: integer
      name:
        maxLength: 50
        minLength: 2
        type: string
      retentionDays:
        type: integer
    required:
    - collaborators
    type: object
  space.UpdateSpaceSettingsRequest:
    properties:
      maxItems:
        minimum: 1
        type: integer
      name:
        maxLength: 50
        minLength: 2
        type: string
      retentionDays:
        minimum: 1
        type: integer
      visibility:
        enum:
        - public
        - private
        type: string
    type: object
  space.ValidateInviteRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  space.VerifyInviteTokenResponse:
    properties:
      inviterName:
        type: string
      isCollaborator:
        type: boolean
      permission:
        type: string
      spaceId:
        type: string
      spaceName:
        type: string
    type: object
  token.CreateTokenRequest:
    properties:
      description:
        maxLength: 100
        type: string
      expiryDays:
        type: integer
    required:
    - description
    type: object
  token.CreateTokenResponse:
    properties:
      token:
        type: string
      tokenInfo:
        $ref: '#/definitions/token.Token'
    type: object
  token.ListTokensResponse:
    properties:
      maxItems:
        type: integer
      tokens:
        items:
          $ref: '#/definitions/token.Token'
        type: array
    type: object
  token.Token:
    properties:
      createdAt:
        type: string
      description:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      lastUsedAt:
        type: string
      token:
        type: string
      userId:
        type: string
    type: object
  token.TokenLoginRequest:
    properties:
      token:
        type: string
      username:
        type: string
    required:
    - token
    - username
    type: object
  token.TokenLoginResponse:
    properties:
      jwtToken:
        type: string
      user:
        $ref: '#/definitions/user.User'
    type: object
  user.AuthResponse:
    properties:
      needChangePwd:
        type: boolean
      token:
        type: string
      user:
        $ref: '#/definitions/user.User'
    type: object
  user.ChangePasswordRequest:
    properties:
      newPassword:
        maxLength: 50
        minLength: 6
        type: string
      oldPassword:
        maxLength: 50
        minLength: 6
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  user.GetCurrentUserResponse:
    properties:
      id:
        type: string
      isAdmin:
        type: boolean
      username:
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        maxLength: 50
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  user.RegisterRequest:
    properties:
      password:
        maxLength: 50
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  user.User:
    properties:
      createdAt:
        type: string
      id:
        type: string
      isAdmin:
        type: boolean
      needChangePwd:
        type: boolean
      username:
        type: string
    type: object
info:
  contact: {}
  description: Nlip API
  title: Nlip API
  version: "1.0"
paths:
  /api/v1/nlip/auth/change-password:
    post:
      consumes:
      - application/json
      description: 修改当前用户的密码
      parameters:
      - description: 修改密码请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 密码修改成功
          schema:
            type: string
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "403":
          description: 旧密码错误
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - 认证
  /api/v1/nlip/auth/login:
    post:
      consumes:
      - application/json
      description: 使用用户名和密码进行登录
      parameters:
      - description: 登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/user.AuthResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: 用户名或密码错误
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      summary: 用户登录
      tags:
      - 认证
  /api/v1/nlip/auth/me:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的基本信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息成功
          schema:
            $ref: '#/definitions/user.GetCurrentUserResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取当前用户信息
      tags:
      - 认证
  /api/v1/nlip/auth/register:
    post:
      consumes:
      - application/json
      description: 注册新用户
      parameters:
      - description: 注册请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 注册成功
          schema:
            $ref: '#/definitions/user.AuthResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "409":
          description: 用户名已存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      summary: 用户注册
      tags:
      - 认证
  /api/v1/nlip/auth/token-login:
    post:
      consumes:
      - application/json
      description: 使用预先生成的Token进行登录
      parameters:
      - description: Token登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/token.TokenLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/token.TokenLoginResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: Token无效或已过期
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      summary: Token登录
      tags:
      - 认证
  /api/v1/nlip/clips:
    get:
      consumes:
      - application/json
      description: 获取当前用户的Clip列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/clip.ListClipsResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取Clip列表
      tags:
      - 剪贴板
    post:
      consumes:
      - application/json
      description: 上传剪贴板内容
      parameters:
      - description: 上传Clip请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/clip.UploadClipRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            $ref: '#/definitions/clip.ClipResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 上传Clip
      tags:
      - 剪贴板
  /api/v1/nlip/clips/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的Clip
      parameters:
      - description: Clip ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "403":
          description: 无权限删除
          schema:
            type: string
        "404":
          description: Clip不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 删除Clip
      tags:
      - 剪贴板
    get:
      consumes:
      - application/json
      description: 根据ID获取单个Clip的详细信息
      parameters:
      - description: Clip ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/clip.ClipResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "404":
          description: Clip不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取Clip详情
      tags:
      - 剪贴板
    put:
      consumes:
      - application/json
      description: 更新指定Clip的信息
      parameters:
      - description: Clip ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新Clip请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/clip.UpdateClipRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/clip.ClipResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "403":
          description: 无权限修改
          schema:
            type: string
        "404":
          description: Clip不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 更新Clip
      tags:
      - 剪贴板
  /api/v1/nlip/clips/last:
    get:
      consumes:
      - application/json
      description: 获取最近修改的Clip
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/clip.ClipResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取最近修改的Clip
      tags:
      - 剪贴板
  /api/v1/nlip/spaces/{id}:
    delete:
      description: 删除空间及其所有内容，普通用户只能删除自己拥有的私有空间，管理员可以删除所有空间
      responses:
        "200":
          description: 删除成功
          schema:
            type: string
        "403":
          description: 没有权限删除该空间
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 删除空间
      tags:
      - 空间
    put:
      consumes:
      - application/json
      description: 更新空间信息，普通用户只能更新自己拥有的私有空间，管理员可以更新所有空间
      parameters:
      - description: 更新空间请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.UpdateSpaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功，返回更新后的空间信息
          schema:
            $ref: '#/definitions/space.Space'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "403":
          description: 没有权限更新该空间
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 更新空间
      tags:
      - 空间
  /api/v1/nlip/spaces/{id}/collaborators:
    delete:
      consumes:
      - application/json
      description: 从空间中删除协作者，只有空间所有者可以执行此操作
      parameters:
      - description: 删除协作者请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.RemoveCollaboratorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除协作者成功
          schema:
            type: string
        "400":
          description: 协作者不存在
          schema:
            type: string
        "403":
          description: 没有权限删除协作者
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 删除协作者
      tags:
      - 空间
    get:
      description: 获取指定空间的协作者列表，公共空间不支持此功能
      produces:
      - application/json
      responses:
        "200":
          description: 获取协作者列表成功
          schema:
            $ref: '#/definitions/space.ListCollaboratorsResponse'
        "400":
          description: 公共空间不支持协作者功能
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取空间协作者列表
      tags:
      - 空间
  /api/v1/nlip/spaces/{id}/collaborators/permissions:
    put:
      consumes:
      - application/json
      description: 更新指定协作者的权限，只有空间所有者可以执行此操作
      parameters:
      - description: 更新协作者权限请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.UpdateCollaboratorPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新协作者权限成功
          schema:
            type: string
        "400":
          description: 协作者不存在
          schema:
            type: string
        "403":
          description: 没有权限更新协作者权限
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 更新协作者权限
      tags:
      - 空间
  /api/v1/nlip/spaces/{id}/invite:
    post:
      consumes:
      - application/json
      description: 生成邀请链接并可选发送邀请邮件，只有空间所有者可以邀请协作者
      parameters:
      - description: 邀请协作者请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.InviteCollaboratorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 邀请成功
          schema:
            $ref: '#/definitions/space.InviteCollaboratorResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "403":
          description: 没有权限邀请协作者
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 邀请协作者
      tags:
      - 空间
  /api/v1/nlip/spaces/{id}/settings:
    put:
      consumes:
      - application/json
      description: 更新空间设置，普通用户只能更新自己拥有的私有空间，管理员可以更新所有空间
      parameters:
      - description: 更新空间设置请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.UpdateSpaceSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功，返回更新后的空间信息
          schema:
            $ref: '#/definitions/space.Space'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "403":
          description: 没有权限更新该空间设置
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 更新空间设置
      tags:
      - 空间
  /api/v1/nlip/spaces/{id}/stats:
    get:
      description: 获取空间的统计信息，包括剪贴板数量和所有者信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取统计信息成功
          schema:
            $ref: '#/definitions/space.SpaceStatsResponse'
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取空间统计信息
      tags:
      - 空间
  /api/v1/nlip/spaces/create:
    post:
      consumes:
      - application/json
      description: 创建一个新的空间，普通用户只能创建私有空间，管理员可以创建公共空间
      parameters:
      - description: 创建空间请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.CreateSpaceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建空间成功
          schema:
            $ref: '#/definitions/space.SpaceResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "403":
          description: 没有权限创建公共空间
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 创建新空间
      tags:
      - 空间
  /api/v1/nlip/spaces/invite/accept:
    post:
      consumes:
      - application/json
      description: 接受空间邀请并成为协作者
      parameters:
      - description: 接受邀请请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.AcceptInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功加入空间
          schema:
            type: string
        "400":
          description: 无效的请求数据或用户已加入空间
          schema:
            type: string
        "403":
          description: 空间所有者不能接受邀请
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 接受邀请
      tags:
      - 空间
  /api/v1/nlip/spaces/invite/verify:
    post:
      consumes:
      - application/json
      description: 验证邀请令牌的有效性，返回空间信息和邀请者信息
      parameters:
      - description: 验证邀请令牌请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/space.ValidateInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 验证成功
          schema:
            $ref: '#/definitions/space.VerifyInviteTokenResponse'
        "400":
          description: 无效的邀请链接或已过期
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 验证邀请令牌
      tags:
      - 空间
  /api/v1/nlip/spaces/list:
    get:
      consumes:
      - application/json
      description: 获取当前用户有权限访问的空间列表，包括自己创建的和协作的空间
      produces:
      - application/json
      responses:
        "200":
          description: 获取空间列表成功
          schema:
            $ref: '#/definitions/space.ListSpacesResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取空间列表
      tags:
      - 空间
  /api/v1/nlip/tokens:
    get:
      consumes:
      - application/json
      description: 获取当前用户的所有Token列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/token.ListTokensResponse'
        "401":
          description: 未授权
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取Token列表
      tags:
      - Token
    post:
      consumes:
      - application/json
      description: 为用户创建新的访问Token，可用于API认证
      parameters:
      - description: 创建Token请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/token.CreateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/token.CreateTokenResponse'
        "400":
          description: 请求参数错误
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "403":
          description: 达到最大Token数量限制
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 创建Token
      tags:
      - Token
  /api/v1/nlip/tokens/{id}:
    delete:
      consumes:
      - application/json
      description: 撤销指定的Token，使其失效
      parameters:
      - description: 要撤销的Token ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 撤销成功
          schema:
            type: string
        "401":
          description: 未授权
          schema:
            type: string
        "404":
          description: Token不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 撤销Token
      tags:
      - Token
  /api/v1/nlip/ws:
    get:
      description: 建立WebSocket连接并进行消息通信
      parameters:
      - description: 认证Token
        in: query
        name: token
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols
        "400":
          description: 缺少Token参数
          schema:
            type: string
        "401":
          description: Token验证失败
          schema:
            type: string
      summary: WebSocket连接
      tags:
      - WebSocket
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
